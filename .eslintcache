[{"C:\\Users\\Daniel Nakajima\\OneDrive\\Área de Trabalho\\ReactProjects\\chat-app\\src\\index.js":"1","C:\\Users\\Daniel Nakajima\\OneDrive\\Área de Trabalho\\ReactProjects\\chat-app\\src\\App.js":"2"},{"size":434,"mtime":1610037349750,"results":"3","hashOfConfig":"4"},{"size":2784,"mtime":1610474046640,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ox70io",{"filePath":"8","messages":"9","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\Daniel Nakajima\\OneDrive\\Área de Trabalho\\ReactProjects\\chat-app\\src\\index.js",[],"C:\\Users\\Daniel Nakajima\\OneDrive\\Área de Trabalho\\ReactProjects\\chat-app\\src\\App.js",["11","12","13","14","15","16","17","18"],"import logo from './logo.svg';\nimport './App.css';\nimport react, {useState, useEffect, useRef} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComment } from '@fortawesome/free-solid-svg-icons';\n\n\nfunction App() {\n\n  const [value, setValue] = useState();\n\n  const [messageList, setMessageList] = useState([]);\n\n  const commentIcon = <FontAwesomeIcon icon={faComment} color='#3C6890'/>\n\n  const messageBoxStyle = {\n    backgroundColor: \"#E7E7E7\",\n    width: '70%',\n    margin: '0 25px'\n  }\n\n  const buttonSend = {\n    backgroundColor:\"#8EAEFF\",\n\n  }\n\n  const userIcon = {\n    color: '#C4C4C4',\n    fontSize:'50px'\n  }\n\n  const onChangeInput = (e)=>{\n    setValue(e.target.value)\n  }\n\n  const onClickButton = ()=>{\n    \n    if(value !== null && value !== '' && !/^\\s*$/.test(value))\n    {\n      setMessageList([...messageList, {'message':value}])\n      setValue('');\n    }\n\n  }\n\n  const handleKeyPress = (e)=>{\n    if(e.key==='Enter'){\n      onClickButton();\n    }\n  }\n\n\n \n\n  return (\n    \n    <div className=\"App\">\n      <div className=\"menu-wrap\">\n        <div className=\"menu-title\">\n          {commentIcon} Chat-App\n        </div>\n\n        <div className=\"room-data\">\n         <div className=\"room-name\">  \n          Room Name:\n         </div>\n         <div className=\"room-password\">\n          Password:\n         </div>\n        </div>\n\n        <div className=\"divider\">\n\n        </div>\n\n        <div className=\"participants-wrap\">\n          <div className=\"user-img\">\n            <AccountCircleIcon style={userIcon}/>\n          </div>\n          <div className=\"user-name\">\n            User1\n          </div>\n        </div>\n\n      </div>\n\n      <div className=\"chat-main\">\n        <div className=\"message-list\">\n        {\n          messageList.map((val)=>{\n            return(\n              <div className=\"message\"> <p>{val.message}</p></div>\n\n            );\n          })\n        }\n        </div>\n        <div className=\"message-input\">\n          <TextField variant=\"outlined\"  style={messageBoxStyle} inputProps={{style: {fontSize: 15}}} onChange={onChangeInput} onKeyPress={handleKeyPress} value={value} size=\"small\"></TextField>\n          \n          <IconButton  style={buttonSend} onClick={onClickButton}><SendIcon/></IconButton>\n          \n        </div>\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"19","severity":1,"message":"20","line":1,"column":8,"nodeType":"21","messageId":"22","endLine":1,"endColumn":12},{"ruleId":"19","severity":1,"message":"23","line":3,"column":8,"nodeType":"21","messageId":"22","endLine":3,"endColumn":13},{"ruleId":"19","severity":1,"message":"24","line":3,"column":26,"nodeType":"21","messageId":"22","endLine":3,"endColumn":35},{"ruleId":"19","severity":1,"message":"25","line":3,"column":37,"nodeType":"21","messageId":"22","endLine":3,"endColumn":43},{"ruleId":"19","severity":1,"message":"26","line":5,"column":10,"nodeType":"21","messageId":"22","endLine":5,"endColumn":20},{"ruleId":"19","severity":1,"message":"27","line":7,"column":10,"nodeType":"21","messageId":"22","endLine":7,"endColumn":20},{"ruleId":"19","severity":1,"message":"28","line":8,"column":8,"nodeType":"21","messageId":"22","endLine":8,"endColumn":12},{"ruleId":"19","severity":1,"message":"29","line":9,"column":8,"nodeType":"21","messageId":"22","endLine":9,"endColumn":14},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'makeStyles' is defined but never used.","'withStyles' is defined but never used.","'Icon' is defined but never used.","'Button' is defined but never used."]